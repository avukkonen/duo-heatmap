{"code":"import * as React from 'react';\r\nimport Row from './components/row/row-component';\r\nimport Cell from './components/cell/cell-component';\r\nconst DuoHeatmap = (props) => {\r\n    const { modifier, rows, color1, color2, steps } = props;\r\n    const [highestValue, setHighestValue] = React.useState(-1);\r\n    const stepsAmount = steps || 10;\r\n    const firstColor = color1 || '#ffffff';\r\n    const secondColor = color2 || '000000';\r\n    React.useEffect(() => {\r\n        let dataHighestValue = 0;\r\n        for (let r = 0; r < rows.length; r++) {\r\n            const currentRow = rows[r];\r\n            let rowHighest = 0;\r\n            for (let c = 0; c < currentRow.data.length; c++) {\r\n                const value1 = currentRow.data[c].item1.value\r\n                    ? currentRow.data[c].item1.value\r\n                    : 0;\r\n                const value2 = currentRow.data[c].item2.value\r\n                    ? currentRow.data[c].item2.value\r\n                    : 0;\r\n                const currentCellValue = value1 + value2;\r\n                if (currentCellValue > rowHighest)\r\n                    rowHighest = currentCellValue;\r\n            }\r\n            if (rowHighest > dataHighestValue)\r\n                dataHighestValue = rowHighest;\r\n        }\r\n        setHighestValue(dataHighestValue);\r\n    }, [highestValue]);\r\n    /**\r\n     * Turns two hex colors to a lerp of rgb values\r\n     * @param color1 first color in hex\r\n     * @param color2 second color in hex\r\n     * @param steps amount of steps\r\n     * @returns an array of objects containing rgb values\r\n     */\r\n    const interpolateHexColorsToRGB = (color1, color2, steps) => {\r\n        // Parse the hex colors into RGB values\r\n        const c1R = parseInt(color1.slice(1, 3), 16);\r\n        const c1G = parseInt(color1.slice(3, 5), 16);\r\n        const c1B = parseInt(color1.slice(5, 7), 16);\r\n        const c2R = parseInt(color2.slice(1, 3), 16);\r\n        const c2G = parseInt(color2.slice(3, 5), 16);\r\n        const c2B = parseInt(color2.slice(5, 7), 16);\r\n        // Calculate the difference between the two colors\r\n        const diffR = c2R - c1R;\r\n        const diffG = c2G - c1G;\r\n        const diffB = c2B - c1B;\r\n        const interpolatedColors = [];\r\n        // Create the interpolated array of colors\r\n        for (let i = 0; i < steps; i++) {\r\n            const ratio = i / (steps - 1);\r\n            const r = Math.round(c1R + ratio * diffR);\r\n            const g = Math.round(c1G + ratio * diffG);\r\n            const b = Math.round(c1B + ratio * diffB);\r\n            interpolatedColors.push({ red: r, green: g, blue: b });\r\n        }\r\n        return interpolatedColors;\r\n    };\r\n    const rgbColors = interpolateHexColorsToRGB(firstColor, secondColor, stepsAmount);\r\n    return (React.createElement(\"div\", { \"data-testid\": 'duo-heatmap', className: `duo-heatmap ${modifier ? 'duo-heatmap--' + modifier : ''}` }, rows.map((row, index) => (React.createElement(Row, { label: row.label, key: 'row-' + index }, highestValue === -1\r\n        ? null\r\n        : row.data.map((cell) => (React.createElement(Cell, { id: cell.id, key: cell.id, highestValue: highestValue, colors: rgbColors, item1: cell.item1, item2: cell.item2 }))))))));\r\n};\r\nexport default DuoHeatmap;\r\n//# sourceMappingURL=index.js.map","references":["/home/untti/git/duo-heatmap/node_modules/@types/react/index.d.ts","/home/untti/git/duo-heatmap/src/components/row/row-component.tsx","/home/untti/git/duo-heatmap/src/components/cell/cell-component.tsx"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/untti/git/duo-heatmap/index.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { Item } from './components/cell/cell-component';\r\ninterface DuoHeatmapProps {\r\n    rows: IRow[];\r\n    color1?: string;\r\n    color2?: string;\r\n    steps?: number;\r\n    modifier?: string;\r\n}\r\nexport interface IRow {\r\n    label?: string;\r\n    data: ICell[];\r\n}\r\nexport interface ICell {\r\n    id: string;\r\n    item1: Item;\r\n    item2: Item;\r\n}\r\ndeclare const DuoHeatmap: React.FC<DuoHeatmapProps>;\r\nexport default DuoHeatmap;\r\n"}}
